{"version":3,"file":"ToDoItems.stories.fac4641e.js","sources":["../../components/ToDoItem/check.svg","../../components/ToDoItem/styled.tsx","../../components/ToDoItem/ToDoItem.tsx","../../components/ToDoItem/ToDoItems.tsx"],"sourcesContent":["export default \"__VITE_ASSET__18543775__\"","import styled, { css } from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nimport check from \"./check.svg\";\n\nconst checkSize = 16;\n\nexport const TaskListItemCheckContainer = styled(motion.div)`\n  padding: 10pt;\n`;\n\nexport const TaskListItemCheck = styled(motion.div)<{ checked: boolean }>`\n  box-sizing: border-box;\n  background: transparent;\n  height: ${checkSize}pt;\n  width: ${checkSize}pt;\n  min-width: ${checkSize}pt;\n  min-height: ${checkSize}pt;\n  margin-right: 12pt;\n  border-radius: 4pt;\n  border: 1pt solid #f0f0f0;\n  position: relative;\n\n  &:before {\n    content: \" \";\n    position: absolute;\n    background: url(${check});\n    background-size: 64%;\n    background-repeat: no-repeat;\n    background-position: center;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    transition-duration: 200ms;\n    transition-timing-function: cubic-bezier(0.6, 2, 0.3, 1);\n    transform: scale(${(props) => (props.checked ? 1 : 0)});\n    opacity: ${(props) => (props.checked ? 1 : 0)};\n  }\n`;\n\nexport const TaskListItemTitle = styled(motion.div)<{ completed: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &:before {\n    content: \" \";\n    position: absolute;\n    top: calc(50%);\n    left: 0;\n    width: ${(props) => (props.completed ? 100 : 0)}%;\n    height: 2px;\n    background-color: #000;\n    transition-timing-function: ease-in-out;\n    transition-duration: 120ms;\n  }\n`;\n\nconst opened = css`\n  box-shadow: -4px 0px 12px -4px rgba(0, 0, 0, 0.1);\n`;\n\nexport const TaskListItem = styled(motion.div)<{ open?: boolean }>`\n  background: #fff;\n\n  border: 1pt solid #fafafa;\n\n  transition: box-shadow 500ms;\n\n  overflow: hidden;\n  /* padding: 10pt; */\n  margin-bottom: 5pt;\n  border-radius: 10pt;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  box-sizing: border-box;\n  opacity: 1;\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0);\n\n  ${(props) => (props.open ? opened : null)}\n\n  &.editing {\n    box-shadow: 0px 6px 10px -4px rgba(0, 0, 0, 0.12);\n    border: 1px solid rgba(0, 0, 0, 0.01);\n    border-top: 1px solid rgba(0, 0, 0, 0.02);\n    margin-bottom: 12pt;\n    margin-top: 7pt;\n  }\n`;\n\nexport const TaskListItemDetails = styled(motion.div)`\n  padding: 10pt;\n  padding-top: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10pt;\n`;\n\nconst buttonTint = {\n  default: css`\n    background: rgba(0, 0, 0, 0.05);\n    color: rgb(0, 0, 0);\n  `,\n  green: css`\n    background: rgba(46, 204, 113, 0.14);\n    color: rgb(46, 204, 113);\n  `,\n  red: css`\n    background: rgba(231, 76, 60, 0.14);\n    color: rgb(231, 76, 60);\n  `,\n};\n\nconst buttonVariant = {\n  text: css`\n    background: transparent;\n  `,\n};\n\nexport const NiceButton = styled.button<{\n  tint?: keyof typeof buttonTint;\n  variant?: keyof typeof buttonVariant;\n}>`\n  padding: 0;\n  margin: 0;\n  border: 0;\n  background: none;\n  font-size: 1em;\n\n  padding: 6pt 14pt;\n  border-radius: 4pt;\n\n  ${(props) => (props.tint ? buttonTint[props.tint] : buttonTint.default)}\n  ${(props) => (props.variant ? buttonVariant[props.variant] : undefined)}\n`;\n","import React from \"react\";\nimport cn from \"classnames\";\nimport {\n  NiceButton,\n  TaskListItem,\n  TaskListItemCheck,\n  TaskListItemCheckContainer,\n  TaskListItemDetails,\n  TaskListItemTitle,\n} from \"./styled\";\n\nimport { motion, HTMLMotionProps, AnimatePresence } from \"framer-motion\";\nimport { Backdrop } from \"./ToDoModal\";\n\nexport type _Task = {\n  id: string;\n  title: string;\n  completed: boolean;\n  details?: string;\n  newlyAdded?: boolean;\n};\n\nexport type ToDoItemProps = {\n  onStateChange: (task: _Task, completed: _Task[\"completed\"]) => void;\n  onSelect?: (task?: _Task) => void;\n  task: _Task;\n  open?: boolean;\n};\n\nexport const ToDoItem: React.FC<ToDoItemProps> = ({\n  task,\n  open,\n  onStateChange,\n  onSelect,\n}) => {\n  return (\n    <TaskListItem\n      layout\n      open={open}\n      layoutId={`todo-root-${task.id}`}\n      initial={{ opacity: 0 }}\n      animate={{\n        opacity: task.completed ? 0.5 : 1,\n      }}\n      exit={{ opacity: 0 }}\n      onClick={open ? undefined : () => onSelect?.(task)}\n    >\n      <motion.div\n        style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\n      >\n        <motion.div style={{ display: \"flex\" }}>\n          <TaskListItemCheckContainer layout>\n            <TaskListItemCheck\n              layout\n              onClick={(e) => {\n                onStateChange(task, !task.completed);\n                e.preventDefault();\n                e.stopPropagation();\n              }}\n              checked={task.completed}\n            />\n          </TaskListItemCheckContainer>\n          <TaskListItemTitle\n            layout\n            completed={task.completed}\n            layoutId={`todo-title-${task.id}`}\n          >\n            {task.title}\n          </TaskListItemTitle>\n        </motion.div>\n        <AnimatePresence mode=\"popLayout\">\n          {open && (\n            <TaskListItemDetails\n              layout\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            >\n              <motion.div layout>{task.details ?? \"-\"}</motion.div>\n              <motion.div layout style={{ display: \"flex\", gap: 8 }}>\n                <NiceButton onClick={() => onSelect?.(undefined)}>\n                  Close\n                </NiceButton>\n              </motion.div>\n            </TaskListItemDetails>\n          )}\n        </AnimatePresence>\n      </motion.div>\n    </TaskListItem>\n  );\n};\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport React from \"react\";\nimport { ToDoItem, ToDoItemProps } from \"./ToDoItem\";\nimport { Backdrop } from \"./ToDoModal\";\n\nexport type ToDoItemsProps = {\n  tasks: ToDoItemProps[\"task\"][];\n  onToDoItemChange: ToDoItemProps[\"onStateChange\"];\n};\n\nexport const ToDoItems: React.FC<ToDoItemsProps> = (props) => {\n  const [selectedTask, setSelectedTask] =\n    React.useState<ToDoItemProps[\"task\"]>();\n  return (\n    <AnimatePresence mode=\"popLayout\">\n      {props.tasks.map((t, i) => (\n        <ToDoItem\n          key={t.id}\n          task={t}\n          open={selectedTask?.id === t.id}\n          onSelect={setSelectedTask}\n          onStateChange={(task, completed) => {\n            props.onToDoItemChange(task, completed);\n          }}\n        />\n      ))}\n    </AnimatePresence>\n  );\n};\n"],"names":["check","checkSize","TaskListItemCheckContainer","styled","motion","TaskListItemCheck","props","TaskListItemTitle","opened","css","TaskListItem","TaskListItemDetails","buttonTint","buttonVariant","NiceButton","ToDoItem","task","open","onStateChange","onSelect","jsx","jsxs","e","AnimatePresence","_a","ToDoItems","selectedTask","setSelectedTask","React","t","i","completed"],"mappings":"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"}